#
# The following options must be defined on the command line (or below)
#
#   numTasks (-N)
#
IOR START
    reorderTasksConstant=1 # defeat buffer cache for read after write by reordering tasks
    fsync=1 # call fsync for POSIX I/O before close
    intraTestBarriers=1 # use barriers between open/read/write/close
    repetitions=2
    verbose=2
    keepFile=0

    segmentCount=48000
    blockSize=1000000

    # POSIX one-file-per-process tests
    # 10k test
    filePerProc=1
    api=POSIX
    testFile = IOR_Posix_10k
    transferSize=10000
RUN

    # 100k test
    filePerProc=1
    api=POSIX
    testFile = IOR_Posix_100k
    transferSize=100000
RUN

    # 1m test
    filePerProc=1
    api=POSIX
    testFile = IOR_Posix_1m
    transferSize=1000000
RUN

    # POSIX shared file tests
    # 10k test
    filePerProc=0
    api=POSIX
    testFile = IOR_Posix_10k_Sh
    transferSize=10000
RUN

    # 100k test
    filePerProc=0
    api=POSIX
    testFile = IOR_Posix_100k_Sh
    transferSize=100000
RUN

    # 1m test
    filePerProc=0
    api=POSIX
    testFile = IOR_Posix_1m_Sh
    transferSize=1000000
RUN

    # MPIIO one-file-per-process tests
    # 10k test
    fsync=0
    filePerProc=1
    api=MPIIO
    collective=1
    testFile = IOR_MPIIO_10k
    transferSize=10000
RUN

    # 100k test
    fsync=0
    filePerProc=1
    api=MPIIO
    collective=1 # enables data shipping optimization
    testFile = IOR_MPIIO_100k
    transferSize=100000
RUN

    # 1m test
    fsync=0
    filePerProc=1
    api=MPIIO
    collective=1
    testFile = IOR_MPIIO_1m
    transferSize=1000000
RUN

    # MPIIO shared file tests
    # 10k test
    fsync=0
    filePerProc=0
    api=MPIIO
    collective=1
    testFile = IOR_MPIIO_10k_Sh
    transferSize=10000
RUN

    # 100k test
    fsync=0
    filePerProc=0
    api=MPIIO
    collective=1
    testFile = IOR_MPIIO_100k_Sh
    transferSize=100000
RUN

    # 1m test
    fsync=0
    filePerProc=0
    api=MPIIO
    collective=1
    testFile = IOR_MPIIO_1m_Sh
    transferSize=1000000
RUN

IOR STOP

